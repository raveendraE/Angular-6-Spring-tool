{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/red-component/red-component.component.html","webpack:///./src/app/red-component/red-component.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  {\n    path:'app',\n    component : AppComponent\n  },\n {\n    path:'login',\n    component : LoginComponent\n  },{\n    path:'home',\n    component : HomeComponent\n  }\n];\n\n@NgModule({ \n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n  \n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<nav>\\n  <a routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\"></a>\\n</nav>\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"Coding Test Portal\";\n  constructor(private route :Router){}\n  ngOnInit(){\n   this.route.navigate(['/login'])\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {AgGridModule} from 'ag-grid-angular/main';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {RedComponentComponent} from \"./red-component/red-component.component\";\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    HomeComponent,\n    AppComponent, \n    RedComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AgGridModule.withComponents([RedComponentComponent])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n  <button routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\"> Back </button>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n <!--  <button routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\"> Home </button> -->\\n <button style=\\\"margin-left: 1410px;\\\" (click)=\\\"refreshData()\\\"> Refresh Data </button>\\n  <ag-grid-angular style=\\\"width: 1520px; height: 500px;\\\"\\n                class=\\\"ag-theme-blue\\\"\\n                [rowData]=\\\"rowData\\\"\\n                [columnDefs]=\\\"columnDefs\\\"\\n                [enableSorting]=\\\"true\\\"\\n                [enableFilter]=\\\"true\\\"\\n                [gridOptions]=\\\"gridOptions\\\" \\n                (gridReady)=\\\"onGridReady($event)\\\">\\n</ag-grid-angular>\\n\\n</p>\\n\"","import { Component} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {GridOptions} from 'ag-grid';\nimport {RedComponentComponent} from \"../red-component/red-component.component\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent {\n  \n  private restAPIUrl = 'http://localhost:8080/Project/CodeTest/login';\n\n  gridOptions: GridOptions;\n  columnDefs: any[]\n  rowData: any[];\n\n  constructor(private _http:HttpClient) {\n      this._http.get(this.restAPIUrl).subscribe((res:Response) => this.restdata(res));\n      this.gridOptions = <GridOptions>{};\n      this.columnDefs = [\n          {width: 80,headerName: \"EMP-ID\", field: \"id\"},\n          {width: 150,headerName: \"EMPLOYEE-NAME\", field: \"name\", cellRendererFramework: RedComponentComponent},\n          {width: 200,headerName: \"EMAIL\", field: \"email\"},\n          {width: 200,headerName: \"DEPT\", field: \"dept\"}, \n          {width: 100,headerName: \"ADDRESS\", field: \"address\"},\n          {width: 200,headerName: \"ZIP CODE\", field: \"pincode\"},\n          {width: 100,headerName: \"COUNTRY\", field: \"country\"},\n         \n      ];\n  }\n\n  public refreshData(){\n    this._http.get(this.restAPIUrl).subscribe((res:Response) => this.restdata(res));\n  }\n  onGridReady(params) {\n      params.api.sizeColumnsToFit();\n  }\n\n  selectAllRows() {\n      this.gridOptions.api.selectAll();\n  }\n\nprivate restdata(results){\n  //alert(\"Result >> \"+results.responseList);\n  this.rowData = results.responseList;\n  }\n}\n","module.exports = \"<span style=\\\"color: red\\\">{{ params.value }}</span>\\r\\n\\r\\n\"","import {Component} from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'app-red-component',\r\n    templateUrl: './red-component.component.html'\r\n})\r\nexport class RedComponentComponent {\r\n    private params: any;\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}